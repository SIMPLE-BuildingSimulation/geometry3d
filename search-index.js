var searchIndex = JSON.parse('{\
"geometry3d":{"doc":"","t":[3,4,3,3,3,13,13,13,6,13,3,13,17,3,3,4,3,3,6,3,3,3,3,3,3,13,13,13,13,13,13,12,12,12,12,12,12,0,12,12,12,12,0,12,12,12,12,0,0,12,12,14,12,12,0,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,12,12,12,0,0,0,12,12,12,0,12,12,12,12,0,12,0,0,0,12,12,12,12,12,12,12,12,12,12,12,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,12,12,3,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,3,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,13,13,3,13,4,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,12,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,11,11,11,11,12,12,3,11,11,11,11,14,12,11,11,12,11,11,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,3,13,13,13,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["BBox3D","BBoxAxis","Cylinder3D","Disk3D","DistantSource3D","EdgeAB","EdgeAC","EdgeBC","Float","Inside","Loop3D","Outside","PI","Plane3D","Point3D","PointInTriangle","Polygon3D","Ray3D","RefCount","Segment3D","Sphere3D","Transform","Triangle3D","Triangulation3D","Vector3D","VertexA","VertexB","VertexC","X","Y","Z","a","angle","area","area","area","b","bbox3d","c","centre","closed","cos_half_alpha","cylinder3d","d","delta_theta","direction","direction","disk3d","distant_source3d","elements","end","gamma","inner","inner_radius","intersection","inv_elements","length","loop3d","max","min","n_valid_triangles","normal","normal","normal","normal","normal","omega","origin","outer","phi_max","phi_max","phi_max","phi_zero","plane3d","point3d","polygon3d","radius","radius","radius","ray3d","segment3d","sphere3d","start","tan_half_alpha","theta_min","transform","transform","transform","transform","transform","triangle3d","triangles","triangulation3d","utils","vector3d","vertices","x","x","y","y","z","z","zmax","zmax","zmin","zmin","BBox3D","BBoxAxis","X","Y","Z","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","from","from","from_intersection","from_point","from_union","from_union_point","get_mins_maxs","intersect","into","into","max","max_extent","min","new","overlaps","point_inside","point_inside_exclusive","surface_area","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Cylinder3D","area","basic_intersection","borrow","borrow_mut","bounds","clone","clone_into","from","id","intersect","intersect_local_ray","intersection_info","into","new","new_partial","new_transformed","phi_max","radius","simple_intersect","simple_intersect_local_ray","to_owned","transform","transform","try_from","try_into","type_id","world_bounds","zmax","zmin","Disk3D","area","basic_intersection","borrow","borrow_mut","bounds","centre","clone","clone_into","from","id","inner_radius","intersect","intersect_local_ray","intersection_info","into","new","new_detailed","normal","phi_max","phi_zero","radius","simple_intersect","simple_intersect_local_ray","to_owned","transform","transform","try_from","try_into","type_id","world_bounds","DistantSource3D","angle","area","borrow","borrow_mut","bounds","clone","clone_into","cos_half_alpha","direction","from","get_proxy_disk","id","intersect","intersect_local_ray","into","new","omega","simple_intersect","simple_intersect_local_ray","tan_half_alpha","to_owned","transform","transform","try_from","try_into","type_id","world_bounds","Back","Front","IntersectionInfo","NonApplicable","SurfaceSide","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","dpdu","dpdv","eq","fmt","from","from","get_side","into","into","inv_transform","new","normal","p","side","to_owned","to_owned","transform","try_from","try_from","try_into","try_into","type_id","type_id","Loop3D","area","area","borrow","borrow_mut","clone","clone_into","close","closed","contains_segment","default","from","index","into","is_closed","is_coplanar","is_diagonal","n_vertices","new","normal","normal","open","push","remove","set_area","set_normal","test_point","to_owned","try_from","try_into","type_id","valid_to_add","vertices","vertices","Plane3D","borrow","borrow_mut","d","from","intersect","into","new","normal","test_point","try_from","try_into","type_id","Point3D","add","add","add_assign","add_assign","as_vector3d","borrow","borrow_mut","clone","clone_into","compare","default","distance","div","div_assign","eq","fmt","fmt","from","into","is_collinear","is_zero","mul","mul","mul","mul_assign","ne","new","squared_distance","sub","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","x","y","z","Polygon3D","area","area","borrow","borrow_mut","clone","clone_into","clone_outer","contains_segment","cut_hole","from","get_closed_loop","inner","inner","into","n_inner_loops","new","normal","normal","outer","outer","outer_centroid","test_point","to_owned","try_from","try_into","type_id","Ray3D","advance","borrow","borrow_mut","clone","clone_into","direction","fmt","from","into","origin","project","to_owned","try_from","try_into","type_id","Segment3D","as_reversed_vector3d","as_vector3d","borrow","borrow_mut","clone","clone_into","compare","contains","contains_point","end","end","eq","fmt","from","get_intersection_pt","intersect","into","length","length","midpoint","ne","new","start","start","to_owned","touches","try_from","try_into","type_id","Sphere3D","area","basic_intersection","borrow","borrow_mut","bounds","centre","clone","clone_into","delta_theta","from","id","intersect","intersect_local_ray","intersection_info","into","new","new_partial","new_partial_transformed","new_transformed","phi_max","radius","simple_intersect","simple_intersect_local_ray","theta_min","to_owned","transform","transform","try_from","try_into","type_id","world_bounds","zmax","zmin","Transform","borrow","borrow_mut","changes_hands","default","elem","elements","from","into","inv_elements","inv_transform_bbox","inv_transform_normal","inv_transform_pt","inv_transform_pt_propagate_error","inv_transform_pt_with_error","inv_transform_ray","inv_transform_ray_propagate_error","inv_transform_vec","inv_transform_vec_propagate_error","inv_transform_vec_with_error","mul4x4","mul4x4_abs","mul4x4point","mul4x4vec","mul_assign","new","rotate_x","rotate_y","rotate_z","scale","transform_bbox","transform_normal","transform_pt","transform_pt_propagate_error","transform_pt_with_error","transform_ray","transform_ray_propagate_error","transform_vec","transform_vec_propagate_error","transform_vec_with_error","translate","try_from","try_into","type_id","EdgeAB","EdgeAC","EdgeBC","Inside","Outside","PointInTriangle","Triangle3D","VertexA","VertexB","VertexC","a","a","ab","area","area","aspect_ratio","b","b","basic_intersection","bc","borrow","borrow","borrow_mut","borrow_mut","bounds","c","c","ca","centroid","circumcenter","circumradius","clone","clone","clone_into","clone_into","compare","det_3x3","eq","fmt","fmt","from","from","get_edge_index_from_points","get_edge_index_from_segment","has_vertex","id","intersect","intersect_local_ray","intersect_triangle","into","into","is_edge","is_vertex","new","normal","normal","segment","set_area","set_normal","simple_intersect","simple_intersect_local_ray","test_point","to_owned","to_owned","to_string","transform","try_from","try_from","try_into","try_into","type_id","type_id","vertex","world_bounds","Ab","Bc","Ca","Edge","TriPiece","Triangulation3D","add","add_point","add_point_to_triangle","as_i","aspect_ratio","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c0","c1","c2","centroid","circumcenter","clone","clone_into","constrain","default","eq","flip_diagonal","fmt","from","from","from","from_i","from_polygon","get_first_invalid","get_flipped_aspect_ratio","get_opposite_vertex","get_trilist","index","into","into","into","invalidate","invalidate","is_constrained","is_convex","mark_as_neighbours","mark_neighbourhouds","mesh_polygon","n0","n1","n2","n_triangles","n_valid_triangles","n_valid_triangles","neighbour","new","new","push","refine","restore_delaunay","set_neighbour","split_edge","split_triangle","to_owned","triangle","triangles","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","valid","with_capacity","solve_quadratic","Vector3D","abs","add","add_assign","as_point3d","borrow","borrow_mut","clone","clone_into","compare","cross","default","div","div_assign","eq","fmt","fmt","from","get_normalized","get_perpendicular","into","is_parallel","is_same_direction","is_zero","length","length_squared","mul","mul","mul","mul_assign","ne","neg","new","normalize","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","x","y","z"],"q":["geometry3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::bbox3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::cylinder3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::disk3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::distant_source3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::intersection","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::loop3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::plane3d","","","","","","","","","","","","","geometry3d::point3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::polygon3d","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::ray3d","","","","","","","","","","","","","","","","geometry3d::segment3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::sphere3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::triangle3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::triangulation3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","geometry3d::utils","geometry3d::vector3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An Axis-aligned Bounding Box, represented by two corners …","Represents one dimension of the <code>BBox3D</code>","A Cylinder of radius <code>radius</code> aligned witht the Z axis, …","A disk of radius <code>radius</code> whose normal points in the <code>normal</code> …","Represents a solid angle pointing from any <code>Point3D</code> in the …","","","","","","","","","Describes a plane based on a <code>Point3D</code> (<code>P</code>) contained in the …","","","","","","An imaginary line starting at one <code>Point3D</code> and ending on …","A Full or Partial sphere in three dimensions, centered at …","Represents a transformation matrix","","A set of <code>Triangle3D</code> that, together, cover completely a …","","","","","","","","","The angle in Radians","","","","","","","The location of the center of the <code>Disk3D</code>","","Cos half angle","","The D coefficient in the equation explained earlier.    ","The range of Latitudes comprised within the allowed <code>zmin</code> …","The direction pointing to the souRefCounte","","","","","","","","The radius of the inner hole of the <code>Disk3D</code>","","","","","Higher corner","The lower corner","The number of valid triangles.","Normal to the plane","The normal of the <code>Disk3D</code>","","","","The solid angle in Sr","","","The range of longitudes allowed (2*PI radians in a full …","The angle described by the <code>Disk3D</code>. A value of <code>2.*PI</code> …","The range of longitudes allowed for the sphere","The axis that marks <code>phi</code> as Zero","","","","The radius of the <code>Cylinder3D</code>","The external radius of the <code>Disk3D</code>","The radius of the <code>Sphere3D</code>","","","","","Tan of half angle","The minimum latitude allowed by <code>zmin</code>","","A pointer to the <code>Transform</code> associated with this <code>Cylinder3D</code>","A pointer to the <code>Transform</code> associated with this <code>Disk3D</code>","A pointer to the <code>Transform</code> associated with this […","A pointer to the <code>Transform</code> associated with this <code>Sphere3D</code>","","The triangles","","","","","","","","","","","The Z coordinate of the upper end of the <code>Cylinder3D</code>","The posiftion of the upper clipping plane on the Z axis","The Z coordinate of the lower end of the <code>Cylinder3D</code>","The position of the lower clipping plane on the Z axis","An Axis-aligned Bounding Box, represented by two corners …","Represents one dimension of the <code>BBox3D</code>","","","","","","","","","","","","","","","Creates a new <code>BBox3D</code> that contains the intersection of two …","Creates a <code>BBox3D</code> that contains a single point, thus its <code>min</code>…","Creates a new <code>BBox3D</code> that contains two existing <code>BBox3D</code>    ","Creates a new <code>BBox3D</code> that contains an existing <code>BBox3D</code> and …","Identifies the minimum and maximum <code>x</code>, <code>y</code>, <code>z</code>","Checks if a ray intersects a BBox3D","","","Higher corner","Returns the dimension in which the <code>BBox3D</code> is longest","The lower corner","Creates a new <code>BBox3D</code> from two points. The points will be …","Checks if a <code>BBox3D</code> overlaps with another one","Checks if a <code>Point3D</code> is inside this <code>BBox3D</code>","Checks if a <code>Point3D</code> is inside this <code>BBox3D</code> but any <code>Point3D</code> …","Returns the total surface area of all the walls in this …","","","","","","","","","A Cylinder of radius <code>radius</code> aligned witht the Z axis, …","Gets the area of the object","","","","Gets a <code>BBox3D</code> bounding the object, in local coordinates","","","","The name of the figure. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Intersects an object with a [<code>Ray3D]</code> (IN LOCAL COORDINATES) …","","","Creates a new full <code>Cylinder3D</code>; i.e., it is a revolution of …","Creates a new partial <code>Cylinder3D</code>; i.e., it does not have …","The angle <code>phi_max</code> is in degrees","The range of longitudes allowed (2*PI radians in a full …","The radius of the <code>Cylinder3D</code>","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Like <code>intersect_local_ray</code> but simplified because there is …","","Borrows the <code>Transform</code>","A pointer to the <code>Transform</code> associated with this <code>Cylinder3D</code>","","","","Gets a <code>BBox3D</code> bounding the object, in world’s …","The Z coordinate of the upper end of the <code>Cylinder3D</code>","The Z coordinate of the lower end of the <code>Cylinder3D</code>","A disk of radius <code>radius</code> whose normal points in the <code>normal</code> …","Gets the area of the object","Intersects a <code>Ray3D</code> in local coordinates with the <code>Disk3D</code>. …","","","Gets a <code>BBox3D</code> bounding the object, in local coordinates    …","The location of the center of the <code>Disk3D</code>","","","","The name of the figure. Useful for debugging.","The radius of the inner hole of the <code>Disk3D</code>","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","","","","","The normal of the <code>Disk3D</code>","The angle described by the <code>Disk3D</code>. A value of <code>2.*PI</code> …","The axis that marks <code>phi</code> as Zero","The external radius of the <code>Disk3D</code>","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Like <code>intersect_local_ray</code> but simplified because there is …","","Borrows the <code>Transform</code>","A pointer to the <code>Transform</code> associated with this <code>Disk3D</code>","","","","Gets a <code>BBox3D</code> bounding the object, in world’s …","Represents a solid angle pointing from any <code>Point3D</code> in the …","The angle in Radians","Gets the area of the object","","","Gets a <code>BBox3D</code> bounding the object, in local coordinates","","","Cos half angle","The direction pointing to the souRefCounte","","Creates a proxy <code>Disk3D</code> that can be used for sampling and …","The name of the figure. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Intersects an object with a [<code>Ray3D]</code> (IN LOCAL COORDINATES) …","","Creates a new [<code>DistantSouRefCounte3D</code>] geometry.","The solid angle in Sr","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Like <code>intersect_local_ray</code> but simplified because there is …","Tan of half angle","","Borrows the <code>Transform</code>","A pointer to the <code>Transform</code> associated with this […","","","","Gets a <code>BBox3D</code> bounding the object, in world’s …","","","Contains more detailed information about the what is …","","Is the <code>Ray3D</code> intersecting from the Front or Back side?","","","","","","","","","","","Partial derivative of the position <code>p</code> with respect to <code>u</code>","Partial derivative of the position <code>p</code> with respect to <code>v</code>","","","","","Given a <code>normal</code> at the intersection point, this function …","","","","","The normal <code>Vector3D</code> at the interaction. Must have the …","The point of intersection","The side in which the ray intersected","","","","","","","","","","","Returns the area of the <code>Loop3D</code>","","","","","","Closes a <code>Loop3D</code>, calculating its area and checking the …","","Checks whether the <code>Loop3D</code> contains a <code>Segment3D</code> <code>s</code>","","","","","Indicates whether the <code>Loop3D</code> has been closed already","Checks whether a <code>Point3D</code> is coplanar with the rest of the …","Checks if a <code>Segment3D</code> intersects any of the other <code>Segment3D</code>","Counts the vertices in the <code>Loop3D</code>","Creates a new and empty <code>Loop3D</code>. It has a Zero Normal and an","Retrieves the normal of the vector.","","Opens a <code>Loop3D</code>","Pushes a new <code>Point3D</code> into the <code>Loop3D</code>.","Removes a vertex","Calculates and caches the area of the <code>Loop3D</code>","Sets the normal <code>Vector3D</code> for a <code>Loop3D</code>","Tests whether a <code>Point3D</code> dwells inside of the <code>Loop3D</code>.","","","","","Checks whether a <code>Point3D</code> can be added to a <code>Loop3D</code> while …","Borrows the vertices","","Describes a plane based on a <code>Point3D</code> (<code>P</code>) contained in the …","","","The D coefficient in the equation explained earlier.    ","","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","Creates a new plane","Normal to the plane","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the area of the <code>Polygon3D</code>","","","","","","Clones the Outer <code>Loop3D</code>","Checks whether the <code>Polygon3D</code> contains a certain <code>Segment3D</code> …","Makes a hole shaped as a <code>Loop3D</code> in the <code>Polygon3D</code>.","","Gets a single <code>Loop3D</code> representing the same <code>Polygon3D</code> …","Borrows an inner <code>Loop3D</code>","","","Counts the inner <code>Loop3D</code>","Creates a new <code>Loop3D</code> without any holes","Retrieves the normal to the Polygon","","Borrows the Outer <code>Loop3D</code>","","Calculates the average of the <code>Point3D</code> in the Outer <code>Loop3D</code>","Checks whether a <code>Point3D</code> is inside the <code>Polygon3D</code>","","","","","","Translates the Ray3D <code>t</code> units of its length into the future.","","","","","","","","","","Returns the point that the Ray3D would be in after …","","","","","An imaginary line starting at one <code>Point3D</code> and ending on …","","","","","","","Compares the Start and End <code>Point3D</code> of two <code>Segment3D</code>. This …","Checks if a <code>Segment3D</code> contains another <code>Segment3D</code>.","Checks if a <code>Segment3D</code> contains another <code>Point3D</code>.","","","","","","Checks where is it that two <code>Segment3D</code> intersect, returning …","Checks if two <code>Segment3D</code> intersect each other. This returns …","","","","Gets the midpoint of the a <code>Segment3D</code>","","Creates a new <code>Segment3D</code>","","","","Checks if two <code>Segment3D</code> intersect each other. This returns …","","","","A Full or Partial sphere in three dimensions, centered at …","Gets the area of the object","","","","Gets a <code>BBox3D</code> bounding the object, in local coordinates","Gets the <code>Point3D</code> of the <code>Sphere3D</code> that represents its …","","","The range of Latitudes comprised within the allowed <code>zmin</code> …","","The name of the figure. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Intersects an object with a [<code>Ray3D]</code> (IN LOCAL COORDINATES) …","","","Creates a new full <code>Sphere3D</code> of a certain <code>radius</code> and …","Creates a new potentially partial <code>Sphere3D</code> of a certain …","Creates a new potentially partial <code>Sphere3D</code> of a certain …","Creates a new full <code>Sphere3D</code> of a certain <code>radius</code> and …","The range of longitudes allowed for the sphere","The radius of the <code>Sphere3D</code>","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Like <code>intersect_local_ray</code> but simplified because there is …","The minimum latitude allowed by <code>zmin</code>","","Borrows the <code>Transform</code>","A pointer to the <code>Transform</code> associated with this <code>Sphere3D</code>","","","","Gets a <code>BBox3D</code> bounding the object, in world’s …","The posiftion of the upper clipping plane on the Z axis","The position of the lower clipping plane on the Z axis","Represents a transformation matrix","","","Checks whether a <code>Transform</code> modifies the hand-ness of the …","","","","","","","","Inv transforms a <code>Vector3D</code> into another <code>Point3D</code>","Inverse Transforms a <code>Point3D</code> into another <code>Point3D</code>","Inverse Transforms a <code>Point3D</code> into another <code>Point3D</code>, …","Inverse Transforms a <code>Point3D</code> into another <code>Point3D</code>, …","Inverse Transforms a <code>Ray3D</code>. returns a new <code>Ray3D</code> and also …","Inverse Transforms a <code>Ray3D</code> and propagates the error. …","Inverse Transforms a <code>Vector3D</code> into another <code>Vector3D</code>","Inverse  Transforms a <code>Vector3D</code> into another <code>Vector3D</code>, …","Inverse Transforms a <code>Vector3D</code> into another <code>Vector3D</code>, …","","","","","","Crates a new Identity <code>Transform</code> (i.e., does nothing to the …","Creates a new <code>Transform</code> that rotates counterclockwise on …","Creates a new <code>Transform</code> that rotates counterclockwise on …","Creates a new <code>Transform</code> that rotates counterclockwise on …","Creates a new Scale <code>Transform</code>","","Transforms a <code>Vector3D</code> into another <code>Point3D</code>","Transforms a <code>Point3D</code> into another <code>Point3D</code>","Transforms a <code>Point3D</code> into another <code>Point3D</code>, calculating an …","Transforms a <code>Point3D</code> into another <code>Point3D</code>, propagating an …","Transforms a <code>Ray3D</code>. returns a new <code>Ray3D</code> and also the …","Transforms a <code>Ray3D</code> and propagates the error. returns a new …","Transforms a <code>Vector3D</code> into another <code>Vector3D</code>","Transforms a <code>Vector3D</code> into another <code>Vector3D</code>, propagating …","Transforms a <code>Vector3D</code> into another <code>Vector3D</code>, calculating …","Creates a new Translation <code>Transform</code>","","","","","","","","","","","","","","Retrieves the first vertex of an A,B,C <code>Triangle3D</code>","","Retrieves the first segment of an A,B,C <code>Triangle3D</code>","Gets the Area of the <code>Triangle3D</code>… it is cached when …","","Gets the Aspect Ratio of the <code>Triangle3D</code>. This is useful …","Retrieves the second vertex of an A,B,C <code>Triangle3D</code>","","Intersects a <code>Ray3D</code> in local coordinates with the <code>Triangle3D</code>…","Retrieves the second segment of an A,B,C <code>Triangle3D</code>","","","","","Gets a <code>BBox3D</code> bounding the object, in local coordinates","Retrieves the third vertex of an A,B,C <code>Triangle3D</code>","","Retrieves the third segment of an A,B,C <code>Triangle3D</code>","Gets the centroid of the <code>Triangle3D</code>. This value is not …","retrieves the Circumcenter","Gets the Circumradus of the <code>Triangle3D</code>. This value is not …","","","","","Checks whether three <code>Triangle3D</code> objects are made of he …","","","","","","","","Gets the edge number corresponding to a <code>Segment3D</code> in the …","Checks if a <code>Triangle3D</code> contains a certain Vertex in the …","The name of the figure. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Intersects an object with a [<code>Ray3D]</code> (IN LOCAL COORDINATES) …","Intersects a <code>Ray3D</code> in local coordinates with Triangle …","","","","","","Gets the normal of the <code>Triangle3D</code>. This value is cached, …","","Retrieves a segment of an A,B,C <code>Triangle3D</code>","Sets the area of the <code>Triangle3D</code>. This is used when …","Calculates the normal of the Triangle","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","Like <code>intersect_local_ray</code> but simplified because there is …","Tests whether a point—which is assumed to be within the …","","","","Borrows the <code>Transform</code>","","","","","","","","Gets a <code>BBox3D</code> bounding the object, in world’s …","","","","","","A set of <code>Triangle3D</code> that, together, cover completely a …","","Finds the location of a <code>Point3D</code> within the triangulation …","Adds a point on a specific <code>Triangle3D</code>. Returns a <code>bool</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","Triangulates a <code>Polygon3D</code> without refining it, using the …","","Returns the aspect ration that would result after flipping …","Gets the vertex that is opposite to a <code>Segment3D</code> in a …","","","","","","","","","","Marks two triangles as neighbours","Loops over all <code>Triangle3D</code>, setting the neighbours. THis is …","Triangulates a <code>Polygon3D</code> using the simple ear clipping …","","","","Returns the number of <code>Triangle3D</code> in the <code>Triangulation3D</code> …","Returns the number of valid <code>Triangle3D</code> in the …","The number of valid triangles.","","","Creates  a new empty <code>Triangulation3D</code>","","Refines a <code>Triangulation3D</code>. This only works if all then …","Runs through the <code>Triangulation3D</code> checking if it is worth …","","Adds a point to an edge of a <code>Triangle3D</code>, splitting it and …","Adds a point to the interior of a <code>Triangle3D</code>, splitting it …","","","The triangles","","","","","","","","","","","Creates  a new empty <code>Triangulation3D</code> with a certain …","Identifies the values for $<code>ax^2+bx+c=0</code>$ problem, where $…","","","","","Transforms a <code>Vector3D</code> into a <code>Point3D</code>","","","","","","","","","","","","","","","Gets a normalized <code>Vector3D</code> that is perpendicular to <code>self</code>","","Checks if two vectors are parallel","Checks if two vectors are parallel and follow the same …","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,3,4,5,6,3,3,0,3,7,5,4,0,8,9,4,10,0,0,11,12,0,6,7,0,11,12,0,13,13,14,8,7,5,6,3,4,10,6,15,7,9,7,0,0,0,15,7,9,0,0,0,12,4,9,0,15,7,4,9,0,14,0,0,0,5,16,17,16,17,16,17,15,9,15,9,0,0,2,2,2,2,13,2,13,2,13,2,13,2,2,13,13,13,13,13,0,13,2,13,13,13,13,13,13,13,13,13,2,13,2,13,2,13,2,13,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,18,18,0,18,0,18,19,18,19,18,19,18,19,18,19,19,19,18,18,18,19,18,18,19,19,19,19,19,19,18,19,19,18,19,18,19,18,19,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,8,8,8,8,8,8,8,8,8,8,8,8,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,1,1,1,1,0,0,1,1,1,3,3,3,3,3,3,3,3,3,3,3,1,3,1,3,3,3,3,3,3,3,3,1,3,1,3,0,1,3,1,3,1,3,3,3,3,3,3,0,3,1,1,1,3,3,3,3,3,3,3,3,3,3,1,3,3,3,1,3,1,3,1,3,3,20,20,20,0,0,0,20,14,14,20,21,21,14,20,21,14,20,21,21,21,21,21,20,20,21,14,20,14,20,21,14,20,20,14,14,14,14,14,21,21,14,20,21,14,21,0,14,14,14,21,21,21,14,14,14,21,21,14,14,14,14,21,14,14,20,21,14,21,14,20,21,14,20,21,14,20,21,14,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["bboxaxis",4]],[[],["bbox3d",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["point3d",3]]],[[]],[[["point3d",3]]],[[["f64",15],["f64",15],["f64",15],["f64",15],["f64",15],["f64",15]]],[[["ray3d",3],["vector3d",3]],["bool",15]],[[]],[[]],null,[[],["bboxaxis",4]],null,[[["point3d",3],["point3d",3]]],[[],["bool",15]],[[["point3d",3]],["bool",15]],[[["point3d",3]],["bool",15]],[[],["f64",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["f64",15]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4]],[[]],[[]],[[],["bbox3d",3]],[[],["cylinder3d",3]],[[]],[[]],[[],["str",15]],[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["f64",15]],["option",4,[["intersectioninfo",3]]]],[[]],[[["point3d",3],["point3d",3],["f64",15]]],[[["point3d",3],["point3d",3],["f64",15],["f64",15]]],[[["f64",15],["f64",15],["f64",15],["f64",15],["option",4,[["rc",3,[["transform",3]]]]]]],null,null,[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["point3d",3]]]],[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bbox3d",3]],null,null,null,[[],["f64",15]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4]],[[]],[[]],[[],["bbox3d",3]],null,[[],["disk3d",3]],[[]],[[]],[[],["str",15]],null,[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["f64",15]],["option",4,[["intersectioninfo",3]]]],[[]],[[["point3d",3],["vector3d",3],["f64",15]]],[[["point3d",3],["vector3d",3],["f64",15],["f64",15],["vector3d",3],["f64",15],["option",4,[["rc",3,[["transform",3]]]]]]],null,null,null,null,[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["point3d",3]]]],[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bbox3d",3]],null,null,[[],["f64",15]],[[]],[[]],[[],["bbox3d",3]],[[],["distantsource3d",3]],[[]],null,null,[[]],[[["f64",15]],["disk3d",3]],[[],["str",15]],[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["intersectioninfo",3]]]],[[]],[[["vector3d",3],["f64",15]]],null,[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["point3d",3]]]],null,[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bbox3d",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["surfaceside",4]],[[],["intersectioninfo",3]],[[]],[[]],[[]],[[],["intersectioninfo",3]],null,null,[[["surfaceside",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["vector3d",3],["vector3d",3]]],[[]],[[]],[[["transform",3]]],[[["ray3d",3],["point3d",3],["f64",15],["f64",15],["vector3d",3],["vector3d",3],["vector3d",3],["vector3d",3],["vector3d",3]]],null,null,null,[[]],[[]],[[["transform",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["result",4,[["f64",15],["string",3]]]],null,[[]],[[]],[[],["loop3d",3]],[[]],[[],["result",4,[["string",3]]]],null,[[["segment3d",3]],["bool",15]],[[]],[[]],[[["usize",15]]],[[]],[[],["bool",15]],[[["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[["segment3d",3]],["bool",15]],[[],["usize",15]],[[],["loop3d",3]],[[],["vector3d",3]],null,[[]],[[["point3d",3]],["result",4,[["string",3]]]],[[["usize",15]]],[[],["result",4,[["f64",15],["string",3]]]],[[],["result",4,[["string",3]]]],[[["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["point3d",3]],["result",4,[["string",3]]]],[[]],null,null,[[]],[[]],null,[[]],[[["ray3d",3]],["option",4,[["f64",15]]]],[[]],[[["point3d",3],["vector3d",3]]],null,[[["point3d",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["vector3d",3]],["point3d",3]],[[]],[[]],[[["vector3d",3]]],[[],["vector3d",3]],[[]],[[]],[[],["point3d",3]],[[]],[[["point3d",3]],["bool",15]],[[],["point3d",3]],[[["point3d",3]],["f64",15]],[[["f64",15]]],[[["f64",15]]],[[["point3d",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["point3d",3],["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[],["bool",15]],[[["f64",15]]],[[["point3d",3]],["f64",15]],[[["vector3d",3]],["f64",15]],[[["f64",15]]],[[["point3d",3]],["bool",15]],[[["f64",15],["f64",15],["f64",15]],["point3d",3]],[[["point3d",3]],["f64",15]],[[["point3d",3]],["vector3d",3]],[[["vector3d",3]],["point3d",3]],[[["vector3d",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[],["f64",15]],null,[[]],[[]],[[],["polygon3d",3]],[[]],[[],["loop3d",3]],[[["segment3d",3]],["bool",15]],[[["loop3d",3]],["result",4,[["string",3]]]],[[]],[[],["loop3d",3]],[[["usize",15]],["result",4,[["loop3d",3],["string",3]]]],null,[[]],[[],["usize",15]],[[["loop3d",3]],["result",4,[["polygon3d",3],["string",3]]]],[[],["vector3d",3]],null,[[],["loop3d",3]],null,[[],["point3d",3]],[[["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["f64",15]]],[[]],[[]],[[],["ray3d",3]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[["f64",15]],["point3d",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["vector3d",3]],[[],["vector3d",3]],[[]],[[]],[[],["segment3d",3]],[[]],[[["segment3d",3]],["bool",15]],[[["segment3d",3]],["result",4,[["bool",15],["string",3]]]],[[["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[],["point3d",3]],null,[[["segment3d",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["segment3d",3]],["option",4]],[[["segment3d",3],["point3d",3]],["bool",15]],[[]],[[],["f64",15]],null,[[],["point3d",3]],[[["segment3d",3]],["bool",15]],[[["point3d",3],["point3d",3]],["segment3d",3]],[[],["point3d",3]],null,[[]],[[["segment3d",3],["point3d",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["f64",15]],[[["ray3d",3]],["option",4]],[[]],[[]],[[],["bbox3d",3]],[[],["point3d",3]],[[],["sphere3d",3]],[[]],null,[[]],[[],["str",15]],[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["f64",15]],["option",4,[["intersectioninfo",3]]]],[[]],[[["f64",15],["point3d",3]]],[[["f64",15],["point3d",3],["f64",15],["f64",15],["f64",15]]],[[["f64",15],["f64",15],["f64",15],["f64",15],["option",4,[["rc",3,[["transform",3]]]]]]],[[["f64",15],["option",4,[["rc",3,[["transform",3]]]]]]],null,null,[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["point3d",3]]]],null,[[]],[[],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["bbox3d",3]],null,null,null,[[]],[[]],[[],["bool",15]],[[]],null,null,[[]],[[]],null,[[["bbox3d",3]],["bbox3d",3]],[[["vector3d",3]],["vector3d",3]],[[["point3d",3]],["point3d",3]],[[["point3d",3],["point3d",3]]],[[["point3d",3]]],[[["ray3d",3]]],[[["ray3d",3],["point3d",3],["point3d",3]]],[[["vector3d",3]],["vector3d",3]],[[["vector3d",3],["point3d",3]]],[[["vector3d",3]]],[[]],[[["f64",15],["f64",15],["f64",15]],["point3d",3]],[[["point3d",3]],["point3d",3]],[[["vector3d",3]],["vector3d",3]],[[]],[[]],[[["f64",15]]],[[["f64",15]]],[[["f64",15]]],[[["f64",15],["f64",15],["f64",15]]],[[["bbox3d",3]],["bbox3d",3]],[[["vector3d",3]],["vector3d",3]],[[["point3d",3]],["point3d",3]],[[["point3d",3],["point3d",3]]],[[["point3d",3]]],[[["ray3d",3]]],[[["ray3d",3],["point3d",3],["point3d",3]]],[[["vector3d",3]],["vector3d",3]],[[["vector3d",3],["point3d",3]]],[[["vector3d",3]]],[[["f64",15],["f64",15],["f64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[],["point3d",3]],null,[[],["segment3d",3]],[[],["f64",15]],null,[[],["f64",15]],[[],["point3d",3]],null,[[["ray3d",3],["point3d",3],["point3d",3]],["option",4]],[[],["segment3d",3]],[[]],[[]],[[]],[[]],[[],["bbox3d",3]],[[],["point3d",3]],null,[[],["segment3d",3]],[[],["point3d",3]],[[],["point3d",3]],[[],["f64",15]],[[],["triangle3d",3]],[[],["pointintriangle",4]],[[]],[[]],[[["triangle3d",3]],["bool",15]],[[["vector3d",3],["vector3d",3],["vector3d",3]],["f64",15]],[[["pointintriangle",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["point3d",3],["point3d",3]],["option",4,[["usize",15]]]],[[["segment3d",3]],["option",4,[["usize",15]]]],[[["point3d",3]],["bool",15]],[[],["str",15]],[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["intersectioninfo",3]]]],[[["ray3d",3],["point3d",3],["point3d",3],["point3d",3]],["option",4]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["point3d",3],["point3d",3],["point3d",3]],["result",4,[["string",3]]]],[[],["vector3d",3]],null,[[["usize",15]],["result",4,[["segment3d",3],["string",3]]]],[[]],[[]],[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["ray3d",3],["point3d",3],["point3d",3]],["option",4,[["point3d",3]]]],[[["point3d",3]],["pointintriangle",4]],[[]],[[]],[[],["string",3]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15]],["result",4,[["point3d",3],["string",3]]]],[[],["bbox3d",3]],null,null,null,null,null,null,[[["usize",15]]],[[["point3d",3]],["result",4,[["bool",15],["string",3]]]],[[["usize",15],["point3d",3],["pointintriangle",4]],["bool",15]],[[],["usize",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["edge",4]],[[]],[[["edge",4]]],[[]],[[["edge",4]],["bool",15]],[[["usize",15],["edge",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["usize",15]]],[[["polygon3d",3]],["result",4,[["triangulation3d",3],["string",3]]]],[[["usize",15]],["option",4,[["usize",15]]]],[[["usize",15],["edge",4]],["option",4,[["f64",15]]]],[[["triangle3d",3],["segment3d",3]],["result",4,[["point3d",3],["string",3]]]],[[],["vec",3,[["triangle3d",3]]]],null,[[]],[[]],[[]],[[]],[[["usize",15]],["result",4,[["string",3]]]],[[["edge",4]],["bool",15]],[[["point3d",3],["point3d",3],["point3d",3],["point3d",3]],["bool",15]],[[["usize",15],["edge",4],["usize",15]],["result",4,[["string",3]]]],[[],["result",4,[["string",3]]]],[[["polygon3d",3],["f64",15],["f64",15]],["result",4,[["triangulation3d",3],["string",3]]]],null,null,null,[[],["usize",15]],[[],["usize",15]],null,[[["edge",4]],["option",4,[["usize",15]]]],[[["point3d",3],["point3d",3],["point3d",3],["usize",15]],["result",4,[["string",3]]]],[[],["triangulation3d",3]],[[["point3d",3],["point3d",3],["point3d",3],["usize",15]],["result",4,[["usize",15],["string",3]]]],[[["f64",15],["f64",15]],["result",4,[["string",3]]]],[[["f64",15]]],[[["edge",4],["usize",15]]],[[["usize",15],["edge",4],["point3d",3]],["result",4,[["string",3]]]],[[["usize",15],["point3d",3]],["result",4,[["string",3]]]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["usize",15]],["triangulation3d",3]],[[["f64",15],["f64",15],["f64",15]],["option",4]],null,[[]],[[["vector3d",3]],["vector3d",3]],[[["vector3d",3]]],[[],["point3d",3]],[[]],[[]],[[],["vector3d",3]],[[]],[[["vector3d",3]],["bool",15]],[[["vector3d",3]],["vector3d",3]],[[],["vector3d",3]],[[["f64",15]],["vector3d",3]],[[["f64",15]]],[[["vector3d",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["vector3d",3]],[[],["result",4,[["string",3]]]],[[]],[[["vector3d",3]],["bool",15]],[[["vector3d",3]],["bool",15]],[[],["bool",15]],[[],["f64",15]],[[],["f64",15]],[[["vector3d",3]],["f64",15]],[[["f64",15]],["vector3d",3]],[[["point3d",3]],["f64",15]],[[["f64",15]]],[[["vector3d",3]],["bool",15]],[[],["vector3d",3]],[[["f64",15],["f64",15],["f64",15]],["vector3d",3]],[[]],[[["vector3d",3]],["vector3d",3]],[[["vector3d",3]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null],"p":[[4,"PointInTriangle"],[4,"BBoxAxis"],[3,"Triangle3D"],[3,"DistantSource3D"],[3,"Loop3D"],[3,"Polygon3D"],[3,"Disk3D"],[3,"Plane3D"],[3,"Sphere3D"],[3,"Ray3D"],[3,"Transform"],[3,"Segment3D"],[3,"BBox3D"],[3,"Triangulation3D"],[3,"Cylinder3D"],[3,"Point3D"],[3,"Vector3D"],[4,"SurfaceSide"],[3,"IntersectionInfo"],[4,"Edge"],[3,"TriPiece"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};